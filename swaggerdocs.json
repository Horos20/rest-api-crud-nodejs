{
  "openapi": "3.0.2",
  "info": {
    "title": "Workers",
    "version": "1.0.0",
    "description": "Workers API"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Local server"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Workers"
        ],
        "description": "Get workers",
        "operationId": "getWorkers",
        "responses": {
          "200": {
            "description": "Get all workers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {},
                  "items": {}
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "id": 1,
                          "employee_name": "Tom",
                          "employee_salary": 45000,
                          "employee_age": 20,
                          "profile_image": "",
                          "owner_id": null
                        },
                        {
                          "id": 2,
                          "employee_name": "Jerry",
                          "employee_salary": 52000,
                          "employee_age": 29,
                          "profile_image": "",
                          "owner_id": null
                        },
                        {
                          "id": 3,
                          "employee_name": "Annie",
                          "employee_salary": 37000,
                          "employee_age": 23,
                          "profile_image": "",
                          "owner_id": null
                        }
                      ],
                      "status": "success",
                      "message": "Successfully! All records has been fetched."
                    }
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Failed to get all workers",
          "content": {
            "application/json": {
              "example": {
                "message": "Failed to get all workers",
                "internal_code": "Failed to get all workers"
              }
            }
          }
        },
        "summary": "Get all workers"
      },
      "post": {
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workers"
              },
              "examples": {
                "workers": {
                  "value": {
                    "employee_name": "Fin",
                    "employee_salary": 49000,
                    "employee_age": 27,
                    "owner_id": {
                      "user_name": null,
                      "user_id": null
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Workers"
        ],
        "description": "Create a new worker",
        "operationId": "postWorkers",
        "responses": {
          "201": {
            "description": "Created a new worker",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workers"
                }
              }
            }
          }
        },
        "400": {
          "description": "Failed to create a new worker",
          "content": {
            "application/json": {
              "example": {
                "message": "Failed to create a new worker",
                "internal_code": "Failed to create a new worker"
              }
            }
          }
        },
        "summary": "Create a new worker"
      }
    },
    "/{worker_id}": {
      "put": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workers"
              },
              "examples": {
                "worker": {
                  "value": {
                    "employee_name": "Fin2",
                    "employee_salary": 48000,
                    "employee_age": 28
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Workers/:id"
        ],
        "parameters": [
          {
            "examples": {
              "id": {
                "value": 1
              }
            },
            "name": "worker_id",
            "in": "path",
            "required": true
          }
        ],
        "description": "Updates a worker",
        "operationId": "updateWorkers",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Update a worker",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workers"
                }
              }
            },
            "examples": {
              "worker": {
                "value": {
                  "data": [
                    {
                      "id": 1,
                      "employee_name": "Fin2",
                      "employee_salary": 48000,
                      "employee_age": 28,
                      "profile_image": "",
                      "owner_id": null
                    }
                  ],
                  "status": "success",
                  "message": "Successfully! Record has been updated."
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "example": {
                  "error": "Unauthorized"
                }
              }
            }
          }
        },
        
        "summary": "Update a worker"
      },
      "delete": {
        "tags": [
          "Workers/:id"
        ],
        "parameters": [
          {
            "examples": {
              "id": {
                "value": "1"
              }
            },
            "name": "worker_id",
            "in": "path",
            "required": true
          }
        ],
        "description": "Delete a worker",
        "operationId": "deleteWorkers",
        "responses": {
          "200": {
            "description": "Deleted a worker",
            "content": {
              "application/json": {
                "example": {
                  "status": "success",
      "message": "Successfully! Record has been deleted."
                }
              }
            }
          }
        },
        "400": {
          "description": "Failed to delete a worker",
          "content": {
            "application/json": {
              "example": {
                "message": "Failed to delete a worker",
                "internal_code": "Failed to delete a worker"
              }
            }
          }
        },
        "summary": "Delete a worker"
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "Logs"
        ],
        "description": "Gets logs",
        "operationId": "getLogs",
        "responses": {
          "200": {
            "description": "Get logs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "eventName": {
                      "type": "string"
                    },
                    "data": {
                      "type": "string"
                    },
                    "ip": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "items": {}
                }
              }
            }
          }
        },
        "400": {
          "description": "Failed to get logs",
          "content": {
            "application/json": {
              "example": {
                "message": "Failed to get logs",
                "internal_code": "Failed to get logs"
              }
            }
          }
        },
        "summary": "Get logs"
      }
    },
    "/login": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/login"
              },
              "examples": {
                "user": {
                  "value": {
                    "name": "Jack",
                    "user_id": 1
                  }
                }
              }
            }
          },
          "required": true
        },
        "tags": [
          "Login"
        ],
        "description": "Login",
        "operationId": "login",
        "responses": {
          "200": {
            "description": "Login",
            "content": {
              "examples": {
                "user": {
                  "value": {
                    "name": "Jack",
                    "user_id": 1
                  }
                }
              }
            }
          }
        },
        "400": {
          "description": "Failed to login",
          "content": {
            "application/json": {
              "example": {
                "message": "Failed to login",
                "internal_code": "Failed to login"
              }
            }
          }
        },
        "summary": "Login"
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Logout"
        ],
        "description": "Logout",
        "operationId": "logout",
        "responses": {
          "200": {
            "description": "Logout",
            "content": {
              "application/json": {
                "example":{
                  "message": "Logged out successfully",
                  "user": null
                }
              }
            }
          }
        },
        "400": {
          "description": "Failed to logout",
          "content": {
            "application/json": {
              "example": {
                "message": "Failed to logout",
                "internal_code": "Failed to logout"
              }
            }
          }
        },
        "summary": "Logout"
      }
    }
  },
  "components": {
    "schemas": {
      "workers": {
        "title": "Workers",
        "description": "Consists of all workers",
        "type": "object",
        "properties": {
          "workers": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "employee_name": {
                "type": "string"
              },
              "employee_salary": {
                "type": "integer"
              },
              "employee_age": {
                "type": "integer"
              },
              "profile_image": {
                "type": "string"
              },
              "owner_id": {
                "type": {
                  "user_name": "integer",
                  "user_id": "integer"
                }
              }
            }
          }
        },
        "example": {
          "employee_name": "John",
          "employee_salary": 54768,
          "employee_age": 43,
          "profile_image": "",
          "owner_id": {
            "user_name": "John",
            "user_id": 1
          }
        }
      },
      "users": {
        "title": "Users",
        "description": "Consists of all users",
        "type": "object",
        "properties": {
          "users": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "username": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "username": "John"
        }
      },
      "login": {
        "title": "Login",
        "description": "Login",
        "type": "object",
        "properties": {
          "users": {
            "type": "object",
            "properties": {
              "user_name": {
                "type": "string"
              },
              "user_id": {
                "type": "integer"
              }
            }
          }
        },
        "example": {
          "user_name": "Jack",
          "user_id": 1
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Get the json webtoken from login API and paste it here."
      }
    }
  }
}